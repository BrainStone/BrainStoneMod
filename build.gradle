buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.8"
}
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'net.minecraftforge.gradle.forge'

def getChangelog() {
  try {
    return "git log -1 --pretty=%b".execute().text.trim();
  } catch(Exception e) {
    return ''
  }
}
def getVersionType() {
  def lower_version = config.mod_version.toLowerCase();

  if (lower_version.contains("prerelease"))
    return "beta";
  else if (lower_version.contains("release"))
    return "release";
  else if (lower_version.contains("dev"))
    return "beta";
  else
    return "alpha";
}
def signJar(archivePath) {
  if (project.hasProperty('keyStoreAlias') && project.hasProperty('keyStore') && project.hasProperty('keyStorePass')) {
    ant.signjar(
      jar:                  archivePath,
      alias:                project.keyStoreAlias,
      keystore:             project.keyStore,
      storepass:            project.keyStorePass,
      preservelastmodified: true
    )
  } else {
    println 'WARNING!!!\tCannot sign jar!'
  }
}

ext.configFile = file "build.properties"
configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

def MainDirResources = fileTree(dir: '.', includes: ['README.md', 'LICENSE'])
version = config.mod_version
group = "brainstonemod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BrainStoneMod"

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "eclipse"
    replace '${version}', project.version
    mappings = "snapshot_20160518"
    useDepAts = true
}

repositories{
    maven { //JEI, Natura, Mantle, TiCon
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { //EnderIO, EnderCore, EnderZoo, The One Probe
        url = "http://maven.tterrag.com"
    }
}

dependencies {
    compile "org.projectlombok:lombok:1.16.10"
    
    deobfProvided group: "mezz.jei", name: "jei_1.10.2", version: "3.9.0.246"
    deobfProvided group: "slimeknights", name: "TConstruct", version: "1.10.2-2.5.6b.jenkins425"
    deobfProvided group: "slimeknights.mantle", name: "Mantle", version: "1.10.2-1.1.1.194"
    provided "com.enderio.core:EnderCore:1.10.2-0.4.1.56-beta"
    provided "com.enderio:EnderIO:1.10.2-3.0.1.98_beta:dev"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    from MainDirResources
}

jar {
    doLast {
        if (!gradle.taskGraph.hasTask(reobfJar)) {
            signJar(jar)
        }
    }
}

reobfJar {
    doLast {
        signJar(jar)
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    
    doLast {
        signJar(deobfJar.archivePath)
    }
}

sourceJar {
    doLast {
        signJar(sourceJar.archivePath)
    }
}

artifacts {
    archives jar
    archives deobfJar
    archives sourceJar
}

curseforge {
    apiKey = project.hasProperty('keyStoreAlias')? project.curseForgeApiKey : 'empty'
    
    project {
        id = '250836'
        changelog = getChangelog()
        releaseType = getVersionType()
        addGameVersion '1.10.2'
        addGameVersion '1.10'
        addGameVersion '1.9.4'
        addGameVersion 'Java 8'
        
        mainArtifact(jar) {
            displayName = config.mod_version
        }
        addArtifact deobfJar
        addArtifact sourceJar
        
        relations {
            optionalLibrary 'ender-io'
            optionalLibrary 'minefactory-reloaded'
            optionalLibrary 'tinkers-construct'
            optionalLibrary 'thermal-foundation'
            optionalLibrary 'thaumcraft'
            optionalLibrary 'baubles'
        }
    }
}
